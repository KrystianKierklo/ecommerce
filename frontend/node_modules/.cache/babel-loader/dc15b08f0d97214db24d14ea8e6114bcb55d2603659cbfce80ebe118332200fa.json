{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_DETAILS_RESET } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_DETAILS_RESET","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"sources":["C:/Users/Krystian/Documents/GitHub/ecommerce/frontend/src/actions/userActions.js"],"sourcesContent":["import {USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_DETAILS_RESET} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/login', {'username': email, 'password': password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () =>  (dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/register/', {'name': name , 'email': email, 'password': password}, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization:  `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users/${id}/`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization:  `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/profile/update`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}