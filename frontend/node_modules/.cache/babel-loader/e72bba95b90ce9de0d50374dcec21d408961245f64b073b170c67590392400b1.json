{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers, productDeleteReducers, productCreateReducers, productUpdateReducers, productReviewCreateReducers } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { userDetailsReducer } from './reducers/userReducers';\nimport { userUpdateProfileRecuder, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducers, orderListReducers, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  productDelete: productDeleteReducers,\n  productCreate: productCreateReducers,\n  productUpdate: productUpdateReducers,\n  ProductReviewCreate: productCreateReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileRecuder,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducers,\n  orderList: orderListReducers,\n  orderDelivered: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","productDeleteReducers","productCreateReducers","productUpdateReducers","productReviewCreateReducers","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileRecuder","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducers","orderListReducers","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","ProductReviewCreate","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDelivered","userList","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/Krystian/Documents/GitHub/ecommerce/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducers, productDetailsReducers, productDeleteReducers, productCreateReducers, productUpdateReducers, productReviewCreateReducers } from './reducers/productReducer'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducer, userRegisterReducer} from './reducers/userReducers'\r\nimport { userDetailsReducer } from './reducers/userReducers'\r\nimport { userUpdateProfileRecuder, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducers, orderListReducers, orderDeliverReducer} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducers,\r\n    productDetails: productDetailsReducers,\r\n    productDelete: productDeleteReducers,\r\n    productCreate: productCreateReducers,\r\n    productUpdate: productUpdateReducers,\r\n    ProductReviewCreate: productCreateReducers,\r\n    cart: cartReducer, \r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileRecuder,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducers,\r\n    orderList: orderListReducers,\r\n    orderDelivered: orderDeliverReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, \r\n    shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,mBAAmB,EAAEC,sBAAsB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,2BAA2B,QAAQ,2BAA2B;AACzL,SAAQC,WAAW,QAAO,yBAAyB;AACnD,SAAQC,gBAAgB,EAAEC,mBAAmB,QAAO,yBAAyB;AAC7E,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,wBAAwB,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,yBAAyB;AACzH,SAAQC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAO,0BAA0B;AAG9J,MAAMC,OAAO,GAAGxB,eAAe,CAAC;EAC5ByB,WAAW,EAAErB,mBAAmB;EAChCsB,cAAc,EAAErB,sBAAsB;EACtCsB,aAAa,EAAErB,qBAAqB;EACpCsB,aAAa,EAAErB,qBAAqB;EACpCsB,aAAa,EAAErB,qBAAqB;EACpCsB,mBAAmB,EAAEvB,qBAAqB;EAC1CwB,IAAI,EAAErB,WAAW;EACjBsB,SAAS,EAAErB,gBAAgB;EAC3BsB,YAAY,EAAErB,mBAAmB;EACjCsB,WAAW,EAAErB,kBAAkB;EAC/BsB,iBAAiB,EAAErB,wBAAwB;EAC3CsB,WAAW,EAAElB,kBAAkB;EAC/BmB,YAAY,EAAElB,mBAAmB;EACjCmB,QAAQ,EAAElB,eAAe;EACzBmB,WAAW,EAAElB,mBAAmB;EAChCmB,SAAS,EAAElB,iBAAiB;EAC5BmB,cAAc,EAAElB,mBAAmB;EACnCmB,QAAQ,EAAE3B,eAAe;EACzB4B,UAAU,EAAE3B,iBAAiB;EAC7B4B,UAAU,EAAE3B;AAEhB,CAAC,CAAC;AAGF,MAAM4B,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAEtD,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEvD,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC;AAG5D,MAAMK,YAAY,GAAG;EACjBrB,IAAI,EAAE;IAACsB,SAAS,EAAER,oBAAoB;IACtCS,eAAe,EAAEH;EAA0B,CAAC;EAC5CnB,SAAS,EAAE;IAACuB,QAAQ,EAAEL;EAAmB;AAC7C,CAAC;AAED,MAAMM,UAAU,GAAG,CAACtD,KAAK,CAAC;AAE1B,MAAMuD,KAAK,GAAG1D,WAAW,CAACyB,OAAO,EAAE4B,YAAY,EAAEjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAU,CAAC,CAAC,CAAC;AAErG,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}