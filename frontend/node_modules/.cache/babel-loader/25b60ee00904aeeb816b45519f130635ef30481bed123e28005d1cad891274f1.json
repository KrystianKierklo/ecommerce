{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krystian\\\\Documents\\\\GitHub\\\\ecommerce\\\\frontend\\\\src\\\\components\\\\Paginate.js\";\nimport React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Paginate(_ref) {\n  let {\n    pages,\n    page,\n    keyword = '',\n    isAdmin = false\n  } = _ref;\n  const searchParams = new URLSearchParams();\n  if (keyword) {\n    searchParams.set('keyword', keyword);\n  }\n  return pages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [...Array(pages).keys()].map(x => /*#__PURE__*/_jsxDEV(LinkContainer, {\n      to: {\n        search: searchParams.toString(),\n        query: {\n          page: x + 1\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: x + 1 === page,\n        children: x + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this)\n    }, x + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = Paginate;\nexport default Paginate;\nvar _c;\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["React","Pagination","LinkContainer","jsxDEV","_jsxDEV","Paginate","_ref","pages","page","keyword","isAdmin","searchParams","URLSearchParams","set","children","Array","keys","map","x","to","search","toString","query","Item","active","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Krystian/Documents/GitHub/ecommerce/frontend/src/components/Paginate.js"],"sourcesContent":["import React from 'react'\r\nimport {Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    const searchParams = new URLSearchParams();\r\n  \r\n    if (keyword) {\r\n      searchParams.set('keyword', keyword);\r\n    }\r\n  \r\n    return (\r\n      pages > 1 && (\r\n        <Pagination>\r\n          {[...Array(pages).keys()].map((x) => (\r\n            <LinkContainer\r\n              key={x + 1}\r\n              to={{ search: searchParams.toString(), query: { page: x + 1 } }}\r\n            >\r\n              <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n            </LinkContainer>\r\n          ))}\r\n        </Pagination>\r\n      )\r\n    );\r\n  }\r\n  \r\n  export default Paginate;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,QAAO,iBAAiB;AAC1C,SAAQC,aAAa,QAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,QAAQA,CAAAC,IAAA,EAAiD;EAAA,IAAhD;IAAEC,KAAK;IAAEC,IAAI;IAAEC,OAAO,GAAG,EAAE;IAAEC,OAAO,GAAG;EAAM,CAAC,GAAAJ,IAAA;EAC5D,MAAMK,YAAY,GAAG,IAAIC,eAAe,EAAE;EAE1C,IAAIH,OAAO,EAAE;IACXE,YAAY,CAACE,GAAG,CAAC,SAAS,EAAEJ,OAAO,CAAC;EACtC;EAEA,OACEF,KAAK,GAAG,CAAC,iBACPH,OAAA,CAACH,UAAU;IAAAa,QAAA,EACR,CAAC,GAAGC,KAAK,CAACR,KAAK,CAAC,CAACS,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,iBAC9Bd,OAAA,CAACF,aAAa;MAEZiB,EAAE,EAAE;QAAEC,MAAM,EAAET,YAAY,CAACU,QAAQ,EAAE;QAAEC,KAAK,EAAE;UAAEd,IAAI,EAAEU,CAAC,GAAG;QAAE;MAAE,CAAE;MAAAJ,QAAA,eAEhEV,OAAA,CAACH,UAAU,CAACsB,IAAI;QAACC,MAAM,EAAEN,CAAC,GAAG,CAAC,KAAKV,IAAK;QAAAM,QAAA,EAAEI,CAAC,GAAG;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAmB,GAH7DV,CAAC,GAAG,CAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEL;AAEL;AAACC,EAAA,GArBMxB,QAAQ;AAuBf,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}