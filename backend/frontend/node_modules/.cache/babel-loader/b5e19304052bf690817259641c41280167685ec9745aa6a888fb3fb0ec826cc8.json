{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_RESET, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_MY_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS } from '../constants/orderConstants';\nimport axios from 'axios';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const payOrder = (id, paymentResolut) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${id}/pay`, paymentResolut, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders/`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders/`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_RESET","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_RESET","ORDER_LIST_MY_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","axios","CART_CLEAR_ITEMS","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message","getOrderDetails","id","get","payOrder","paymentResolut","put","listMyOrders","listOrders"],"sources":["C:/Users/Krystian/Documents/GitHub/ecommerce/frontend/src/actions/orderActions.js"],"sourcesContent":["import {ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_RESET, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET, ORDER_LIST_MY_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nimport {CART_CLEAR_ITEMS} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization:  `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/orders/add/`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization:  `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(`/api/orders/${id}`, config)\r\n        \r\n\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResolut) => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization:  `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(`/api/orders/${id}/pay`, paymentResolut, config)\r\n        \r\n\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization:  `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(`/api/orders/myorders/`, config)\r\n        \r\n\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    \r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization:  `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(`/api/orders/myorders/`, config)\r\n        \r\n\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}